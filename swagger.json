{
  "swagger": "2.0",
  "info": {
    "title": "Polly",
    "description": "configurable poll distant resources",
    "version": "1.0.0"
  },
  "host": "parallel-scarlet-juravenator.glitch.me",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/env": {
      "get": {
        "tags": [
          "Process"
        ],
        "description": "get environment variables",
        "parameters": [],
        "responses": {
          "200": {
            "description": "environment variables successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/swagger.json": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Watcher": {
      "type": "object",
      "properties": {
        "watcher_id": {
          "type": "string",
          "example": "autogenerated as uuid(32) by sql engine"
        },
        "name": {
          "type": "string",
          "example": ""
        },
        "owner_group_id": {
          "type": "string",
          "example": ""
        },
        "source": {
          "type": "string",
          "example": "module.exports≈{\n        main({modules,data}){\n          // returns a list of watch results\n          // the list is persisted as a watch\n          // each watch must have a unique watch_id\n          // and a payload json object\n          return [{watch_id:444,payload:444}]\n        },\n      }"
        },
        "poll_config": {
          "type": "string",
          "example": "function returnNextRunDate(){\n        return new Date().getTime() + 60000;\n      }"
        }
      }
    },
    "Observable": {
      "type": "object",
      "properties": {
        "observable_id": {
          "type": "string",
          "example": ""
        },
        "watcher_id": {
          "type": "string",
          "example": ""
        },
        "key": {
          "type": "string",
          "example": ""
        },
        "prev_date": {
          "type": "string",
          "example": "YYYY-MM-DD hh:mm:ss.SSSZZ"
        },
        "prev_value": {
          "type": "string",
          "example": "{}"
        },
        "prev_value_hash": {
          "type": "string",
          "example": ""
        },
        "crt_date": {
          "type": "string",
          "example": "YYYY-MM-DD hh:mm:ss.SSSZZ"
        },
        "crt_value": {
          "type": "string",
          "example": "{}"
        },
        "crt_value_hash": {
          "type": "string",
          "example": ""
        }
      }
    },
    "Subscriber": {
      "type": "object",
      "properties": {
        "watcher_id": {
          "type": "string",
          "example": "autogenerated as uuid(32) by sql engine"
        },
        "subscriber_id": {
          "type": "string",
          "example": ""
        },
        "owner_group_id": {
          "type": "string",
          "example": ""
        },
        "source": {
          "type": "string",
          "example": "module.exports≈{\n        main({modules,data}){\n          return [{val:444}]\n        },\n      }"
        }
      }
    },
    "Notifier": {
      "type": "object",
      "properties": {
        "notifier_id": {
          "type": "string",
          "example": "autogenerated as uuid(32) by sql engine"
        },
        "subscriber_id": {
          "type": "string",
          "example": ""
        },
        "owner_group_id": {
          "type": "string",
          "example": ""
        },
        "source": {
          "type": "string",
          "example": "module.exports≈{\n        main({modules,data}){\n          return [{val:444}]\n        },\n      }"
        }
      }
    },
    "Module": {
      "type": "object",
      "properties": {
        "module_id": {
          "type": "string",
          "example": "autogenerated as uuid(32) by sql engine"
        },
        "owner_group_id": {
          "type": "string",
          "example": ""
        },
        "npm_module": {
          "type": "string",
          "example": "moment"
        },
        "source": {
          "type": "string",
          "example": "module.exports≈{\n        /* this function signature*/\n        main:({modules,metadata})=>{\n          return [{val:444}]\n        },\n      }"
        }
      }
    },
    "Owner_group": {
      "type": "object",
      "properties": {
        "owner_group_id": {
          "type": "string",
          "example": "autogenerated as uuid(32) by sql engine"
        },
        "name": {
          "type": "string",
          "example": "ADMIN"
        }
      }
    }
  }
}