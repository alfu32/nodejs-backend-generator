{
 "drop": "DROP TABLE IF EXISTS SUBSCRIBER",
 "clear": "TRUNCATE TABLE IF EXISTS SUBSCRIBER",
 "create": "CREATE TABLE IF NOT EXISTS SUBSCRIBER(\n              subscriber_id VARCHAR PRIMARY KEY DEFAULT (hex( randomblob(16))),\n              /*fk+cols*/ watcher_id VARCHAR,\n/*fk+cols*/ owner_group_id VARCHAR,\n/*fk+cols*/ name VARCHAR,\n/*fk+cols*/ source VARCHAR\n              ,\n              FOREIGN KEY(watcher_id) REFERENCES WATCHER(watcher_id) ,\nFOREIGN KEY(owner_group_id) REFERENCES OWNER_GROUP(owner_group_id) \n            )",
 "insert": "INSERT INTO SUBSCRIBER(\n            watcher_id,owner_group_id,name,source\n            ) VALUES (@watcher_id,@owner_group_id,@name,@source)",
 "updateSingle": "UPDATE SUBSCRIBER SET\n            watcher_id=@watcher_id,\nowner_group_id=@owner_group_id,\nname=@name,\nsource=@source\n            WHERE subscriber_id=@subscriber_id",
 "deleteSingle": "DELETE FROM SUBSCRIBER \n            WHERE subscriber_id=@subscriber_id",
 "getSingle": "SELECT T.rowid,T.* FROM SUBSCRIBER T\n            WHERE T.subscriber_id=@subscriber_id",
 "getAll": "SELECT T.rowid,T.* FROM SUBSCRIBER T",
 "getLast": "SELECT T.rowid,T.* FROM SUBSCRIBER T HAVING T.rowid=MAX(T.rowid)",
 "getByRowid": "SELECT T.rowid,T.* FROM SUBSCRIBER T WHERE T.rowid=@rowid",
 "countAll": "SELECT MAX(rowid) as last_id,COUNT(*) as records FROM SUBSCRIBER",
 "selectBYwatcher_id": "SELECT T.rowid,T* FROM SUBSCRIBER T \n          WHERE watcher_id=@watcher_id",
 "countBYwatcher_id": "SELECT MAX(rowid) as last_id,COUNT(*) as records FROM SUBSCRIBER \n          WHERE watcher_id=@watcher_id",
 "selectBYowner_group_id": "SELECT T.rowid,T* FROM SUBSCRIBER T \n          WHERE owner_group_id=@owner_group_id",
 "countBYowner_group_id": "SELECT MAX(rowid) as last_id,COUNT(*) as records FROM SUBSCRIBER \n          WHERE owner_group_id=@owner_group_id"
}